# ========================================
# EXERCÍCIO 4: Previsão de gastos
# ========================================

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

print("\n" + "=" * 50)
print("EXERCÍCIO 4 - Previsão de Gastos dos Clientes")
print("=" * 50)

# Dados de treinamento
renda = np.array([1200, 5000, 8000, 10000, 30000]).reshape(-1, 1)
gastos = np.array([750, 1500, 4000, 6000, 18000])

# Criar e treinar o modelo
modelo_gastos = LinearRegression()
modelo_gastos.fit(renda, gastos)

# Fazer previsões para novas rendas
rendas_teste = np.array([3000, 7000, 15000, 20000]).reshape(-1, 1)
gastos_previstos = modelo_gastos.predict(rendas_teste)

# Exibir os resultados
print("\nPrevisões de gastos:")
for i in range(len(rendas_teste)):
    print(f"Renda: R$ {rendas_teste[i][0]:,.2f} - Gastos previstos: R$ {gastos_previstos[i]:,.2f}")

# Coeficientes do modelo
print(f"\nCoeficiente angular (B1): {modelo_gastos.coef_[0]:.4f}")
print(f"Intercepto (B0): R$ {modelo_gastos.intercept_:,.2f}")

# Plotar o gráfico
plt.figure(figsize=(10, 6))
plt.scatter(renda, gastos, color='green', s=100, label='Dados de Treinamento')
plt.plot(rendas_teste, gastos_previstos, color='red', marker='o', label='Previsões')
plt.xlabel('Renda (R$)')
plt.ylabel('Gastos (R$)')
plt.title('Previsão de Gastos com Base na Renda')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()